{"Protocols/XCDYouTubeOperation.html#/c:objc(pl)XCDYouTubeOperation(im)cancel":{"name":"-cancel","abstract":"<p>Cancels the operation. If the operation is already finished, does nothing.</p>","parent_name":"XCDYouTubeOperation"},"Protocols/XCDYouTubeOperation.html":{"name":"XCDYouTubeOperation","abstract":"<p>The <code>XCDYouTubeOperation</code> protocol is adopted by opaque objects returned by the <code>&lt;-[XCDYouTubeClient getVideoWithIdentifier:completionHandler:]&gt;</code> method.</p>"},"Enums/XCDYouTubeVideoQuality.html#/c:@E@XCDYouTubeVideoQuality@XCDYouTubeVideoQualitySmall240":{"name":"XCDYouTubeVideoQualitySmall240","abstract":"<p>Video: 240p MPEG-4 Visual | 0.175 Mbit/s","parent_name":"XCDYouTubeVideoQuality"},"Enums/XCDYouTubeVideoQuality.html#/c:@E@XCDYouTubeVideoQuality@XCDYouTubeVideoQualityMedium360":{"name":"XCDYouTubeVideoQualityMedium360","abstract":"<p>Video: 360p H.264 | 0.5 Mbit/s","parent_name":"XCDYouTubeVideoQuality"},"Enums/XCDYouTubeVideoQuality.html#/c:@E@XCDYouTubeVideoQuality@XCDYouTubeVideoQualityHD720":{"name":"XCDYouTubeVideoQualityHD720","abstract":"<p>Video: 720p H.264 | 2-3 Mbit/s","parent_name":"XCDYouTubeVideoQuality"},"Enums/XCDYouTubeVideoQuality.html#/c:@E@XCDYouTubeVideoQuality@XCDYouTubeVideoQualityHD1080":{"name":"XCDYouTubeVideoQualityHD1080","abstract":"<p>Video: 1080p H.264 | 3â€“5.9 Mbit/s","parent_name":"XCDYouTubeVideoQuality"},"Enums/XCDLogLevel.html#/c:@E@XCDLogLevel@XCDLogLevelError":{"name":"XCDLogLevelError","abstract":"<p>Used when an error is produced, e.g. when a <code>&lt;XCDYouTubeVideoOperation&gt;</code> finishes with an error.</p>","parent_name":"XCDLogLevel"},"Enums/XCDLogLevel.html#/c:@E@XCDLogLevel@XCDLogLevelWarning":{"name":"XCDLogLevelWarning","abstract":"<p>Used on unusual conditions that may eventually lead to an error.</p>","parent_name":"XCDLogLevel"},"Enums/XCDLogLevel.html#/c:@E@XCDLogLevel@XCDLogLevelInfo":{"name":"XCDLogLevelInfo","abstract":"<p>Used when logging normal operational information, e.g. when a <code>&lt;XCDYouTubeVideoOperation&gt;</code> starts, is cancelled or finishes.</p>","parent_name":"XCDLogLevel"},"Enums/XCDLogLevel.html#/c:@E@XCDLogLevel@XCDLogLevelDebug":{"name":"XCDLogLevelDebug","abstract":"<p>Used throughout a <code>&lt;XCDYouTubeVideoOperation&gt;</code> for debugging purpose, e.g. for HTTP requests.</p>","parent_name":"XCDLogLevel"},"Enums/XCDLogLevel.html#/c:@E@XCDLogLevel@XCDLogLevelVerbose":{"name":"XCDLogLevelVerbose","abstract":"<p>Used to report large amount of information, e.g. full HTTP responses.</p>","parent_name":"XCDLogLevel"},"Enums/XCDYouTubeErrorCode.html#/c:@E@XCDYouTubeErrorCode@XCDYouTubeErrorNoStreamAvailable":{"name":"XCDYouTubeErrorNoStreamAvailable","abstract":"<p>Returned when no suitable video stream is available. This can occur due to various reason such as:</p>","parent_name":"XCDYouTubeErrorCode"},"Enums/XCDYouTubeErrorCode.html#/c:@E@XCDYouTubeErrorCode@XCDYouTubeErrorNetwork":{"name":"XCDYouTubeErrorNetwork","abstract":"<p>Returned when a network error occurs. See <code>NSUnderlyingErrorKey</code> in the userInfo dictionary for more information.</p>","parent_name":"XCDYouTubeErrorCode"},"Enums/XCDYouTubeErrorCode.html#/c:@E@XCDYouTubeErrorCode@XCDYouTubeErrorEmptyResponse":{"name":"XCDYouTubeErrorEmptyResponse","abstract":"<p>Returned when an empty response is returned. This may indicate that YouTube has blocked requests from your IP address because of overuse.","parent_name":"XCDYouTubeErrorCode"},"Enums/XCDYouTubeErrorCode.html#/c:@E@XCDYouTubeErrorCode@XCDYouTubeErrorInvalidVideoIdentifier":{"name":"XCDYouTubeErrorInvalidVideoIdentifier","abstract":"<p>Previously returned when the given video identifier string is invalid.","parent_name":"XCDYouTubeErrorCode"},"Enums/XCDYouTubeErrorCode.html#/c:@E@XCDYouTubeErrorCode@XCDYouTubeErrorRemovedVideo":{"name":"XCDYouTubeErrorRemovedVideo","abstract":"<p>Previously returned when the video was removed as a violation of YouTube&rsquo;s policy or when the video did not exist.</p>","parent_name":"XCDYouTubeErrorCode"},"Enums/XCDYouTubeErrorCode.html#/c:@E@XCDYouTubeErrorCode@XCDYouTubeErrorRestrictedPlayback":{"name":"XCDYouTubeErrorRestrictedPlayback","abstract":"<p>Previously returned when the video is not playable because of legal reasons or when the video is private.","parent_name":"XCDYouTubeErrorCode"},"Enums/XCDYouTubeErrorCode.html":{"name":"XCDYouTubeErrorCode","abstract":"<p>These values are returned as the error code property of an NSError object with the domain <code><a href=\"36f8f5912051ae747ef441d6511ca4cbConstants.html#/c:@XCDYouTubeVideoErrorDomain\">XCDYouTubeVideoErrorDomain</a></code>.</p>"},"Enums/XCDLogLevel.html":{"name":"XCDLogLevel","abstract":"<p>The log levels, closely mirroring the log levels of CocoaLumberjack.</p>"},"Enums/XCDYouTubeVideoQuality.html":{"name":"XCDYouTubeVideoQuality","abstract":"<p>The quality of YouTube videos. These values are used as keys in the <code>&lt;[XCDYouTubeVideo streamURLs]&gt;</code> property.</p>"},"Constants.html#/c:@XCDYouTubeVideoErrorDomain":{"name":"XCDYouTubeVideoErrorDomain","abstract":"<p>The error domain used throughout XCDYouTubeKit.</p>"},"Constants.html#/c:@XCDYouTubeAllowedCountriesUserInfoKey":{"name":"XCDYouTubeAllowedCountriesUserInfoKey","abstract":"<p>A key that may be present in the error&rsquo;s userInfo dictionary when the error code is XCDYouTubeErrorNoStreamAvailable."},"Constants.html#/c:@XCDYouTubeKitLumberjackContext":{"name":"XCDYouTubeKitLumberjackContext","abstract":"<p>The <a href=\"https://github.com/CocoaLumberjack/CocoaLumberjack/blob/master/Documentation/CustomContext.md\">context</a> used when logging with CocoaLumberjack.</p>"},"Constants.html#/c:@XCDYouTubeVideoQualityHTTPLiveStreaming":{"name":"XCDYouTubeVideoQualityHTTPLiveStreaming","abstract":"<p>Used as a key in the <code>streamURLs</code> property of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/XCDYouTubeVideo.html\">XCDYouTubeVideo</a></code> class for live videos.</p>"},"Constants.html#/c:@XCDMoviePlayerPlaybackDidFinishErrorUserInfoKey":{"name":"XCDMoviePlayerPlaybackDidFinishErrorUserInfoKey","abstract":"<p>NSError key for the <code>MPMoviePlayerPlaybackDidFinishNotification</code> userInfo dictionary.</p>"},"Constants.html#/c:@XCDYouTubeVideoPlayerViewControllerDidReceiveVideoNotification":{"name":"XCDYouTubeVideoPlayerViewControllerDidReceiveVideoNotification","abstract":"<p>Posted when the video player has received the video information. The <code>object</code> of the notification is the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/XCDYouTubeVideoPlayerViewController.html\">XCDYouTubeVideoPlayerViewController</a></code> instance. The <code>userInfo</code> dictionary contains the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/XCDYouTubeVideo.html\">XCDYouTubeVideo</a></code> object.</p>"},"Constants.html#/c:@XCDYouTubeVideoUserInfoKey":{"name":"XCDYouTubeVideoUserInfoKey","abstract":"<p>The key for the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/XCDYouTubeVideo.html\">XCDYouTubeVideo</a></code> object in the user info dictionary of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbConstants.html#/c:@XCDYouTubeVideoPlayerViewControllerDidReceiveVideoNotification\">XCDYouTubeVideoPlayerViewControllerDidReceiveVideoNotification</a></code>.</p>"},"Constants.html#/c:@XCDYouTubeVideoPlayerViewControllerDidReceiveMetadataNotification":{"name":"XCDYouTubeVideoPlayerViewControllerDidReceiveMetadataNotification"},"Constants.html#/c:@XCDMetadataKeyTitle":{"name":"XCDMetadataKeyTitle","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@XCDMetadataKeySmallThumbnailURL":{"name":"XCDMetadataKeySmallThumbnailURL","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@XCDMetadataKeyMediumThumbnailURL":{"name":"XCDMetadataKeyMediumThumbnailURL","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@XCDMetadataKeyLargeThumbnailURL":{"name":"XCDMetadataKeyLargeThumbnailURL","abstract":"<p>Undocumented</p>"},"Classes/XCDYouTubeVideoQueryOperation.html#/c:objc(cs)XCDYouTubeVideoQueryOperation(im)initWithVideo:cookies:":{"name":"-initWithVideo:cookies:","abstract":"<p>Initializes a video  query operation with the specified video and cookies.</p>","parent_name":"XCDYouTubeVideoQueryOperation"},"Classes/XCDYouTubeVideoQueryOperation.html#/c:objc(cs)XCDYouTubeVideoQueryOperation(im)initWithVideo:streamURLsToQuery:options:cookies:":{"name":"-initWithVideo:streamURLsToQuery:options:cookies:","abstract":"<p>Initializes a video  query operation with the specified video,  stream URLs to query and cookies.</p>","parent_name":"XCDYouTubeVideoQueryOperation"},"Classes/XCDYouTubeVideoQueryOperation.html#/c:objc(cs)XCDYouTubeVideoQueryOperation(py)video":{"name":"video","abstract":"<p>The <code>video</code> object that the operation initialized initialized with.</p>","parent_name":"XCDYouTubeVideoQueryOperation"},"Classes/XCDYouTubeVideoQueryOperation.html#/c:objc(cs)XCDYouTubeVideoQueryOperation(py)streamURLsToQuery":{"name":"streamURLsToQuery","abstract":"<p>Undocumented</p>","parent_name":"XCDYouTubeVideoQueryOperation"},"Classes/XCDYouTubeVideoQueryOperation.html#/c:objc(cs)XCDYouTubeVideoQueryOperation(py)cookies":{"name":"cookies","abstract":"<p>The array of <code>NSHTTPCookie</code> objects passed during initialization.</p>","parent_name":"XCDYouTubeVideoQueryOperation"},"Classes/XCDYouTubeVideoQueryOperation.html#/c:objc(cs)XCDYouTubeVideoQueryOperation(py)streamURLs":{"name":"streamURLs","abstract":"<p>Undocumented</p>","parent_name":"XCDYouTubeVideoQueryOperation"},"Classes/XCDYouTubeVideoQueryOperation.html#/c:objc(cs)XCDYouTubeVideoQueryOperation(py)error":{"name":"error","abstract":"<p>Returns an error of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbConstants.html#/c:@XCDYouTubeVideoErrorDomain\">XCDYouTubeVideoErrorDomain</a></code> domain if the operation failed or nil if it succeeded. The operation will only return an error if no stream URL is reachable (error code: <code>XCDYouTubeErrorNoStreamAvailable</code>). Also, this returns <code>nil</code> if the operation is not yet finished or if it was canceled.</p>","parent_name":"XCDYouTubeVideoQueryOperation"},"Classes/XCDYouTubeVideoQueryOperation.html#/c:objc(cs)XCDYouTubeVideoQueryOperation(py)streamErrors":{"name":"streamErrors","abstract":"<p>Undocumented</p>","parent_name":"XCDYouTubeVideoQueryOperation"},"Classes/XCDYouTubeVideoPlayerViewController.html#/c:objc(cs)XCDYouTubeVideoPlayerViewController(im)initWithVideoIdentifier:":{"name":"-initWithVideoIdentifier:","abstract":"<p>Initializes a YouTube video player view controller</p>","parent_name":"XCDYouTubeVideoPlayerViewController"},"Classes/XCDYouTubeVideoPlayerViewController.html#/c:objc(cs)XCDYouTubeVideoPlayerViewController(py)videoIdentifier":{"name":"videoIdentifier","abstract":"<p>The 11 characters YouTube video identifier.</p>","parent_name":"XCDYouTubeVideoPlayerViewController"},"Classes/XCDYouTubeVideoPlayerViewController.html#/c:objc(cs)XCDYouTubeVideoPlayerViewController(py)preferredVideoQualities":{"name":"preferredVideoQualities","abstract":"<p>The preferred order for the quality of the video to play. Plays the first match when multiple video streams are available.</p>","parent_name":"XCDYouTubeVideoPlayerViewController"},"Classes/XCDYouTubeVideoPlayerViewController.html#/c:objc(cs)XCDYouTubeVideoPlayerViewController(im)presentInView:":{"name":"-presentInView:","abstract":"<p>Present the video inside a view.</p>","parent_name":"XCDYouTubeVideoPlayerViewController"},"Classes/XCDYouTubeVideoOperation.html#/c:objc(cs)XCDYouTubeVideoOperation(im)initWithVideoIdentifier:languageIdentifier:":{"name":"-initWithVideoIdentifier:languageIdentifier:","abstract":"<p>Initializes a video operation with the specified video identifier and language identifier.</p>","parent_name":"XCDYouTubeVideoOperation"},"Classes/XCDYouTubeVideoOperation.html#/c:objc(cs)XCDYouTubeVideoOperation(im)initWithVideoIdentifier:languageIdentifier:cookies:":{"name":"-initWithVideoIdentifier:languageIdentifier:cookies:","abstract":"<p>Initializes a video operation with the specified video identifier and language identifier and cookies.</p>","parent_name":"XCDYouTubeVideoOperation"},"Classes/XCDYouTubeVideoOperation.html#/c:objc(cs)XCDYouTubeVideoOperation(im)initWithVideoIdentifier:languageIdentifier:cookies:customPatterns:":{"name":"-initWithVideoIdentifier:languageIdentifier:cookies:customPatterns:","abstract":"<p>Initializes a video operation with the specified video identifier and language identifier and cookies and additional patterns.</p>","parent_name":"XCDYouTubeVideoOperation"},"Classes/XCDYouTubeVideoOperation.html#/c:objc(cs)XCDYouTubeVideoOperation(py)error":{"name":"error","abstract":"<p>Returns an error of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbConstants.html#/c:@XCDYouTubeVideoErrorDomain\">XCDYouTubeVideoErrorDomain</a></code> domain if the operation failed or nil if it succeeded.</p>","parent_name":"XCDYouTubeVideoOperation"},"Classes/XCDYouTubeVideoOperation.html#/c:objc(cs)XCDYouTubeVideoOperation(py)video":{"name":"video","abstract":"<p>Returns a video object if the operation succeeded or nil if it failed.</p>","parent_name":"XCDYouTubeVideoOperation"},"Classes/XCDYouTubeVideo.html#/c:objc(cs)XCDYouTubeVideo(py)identifier":{"name":"identifier","abstract":"<p>The 11 characters YouTube video identifier.</p>","parent_name":"XCDYouTubeVideo"},"Classes/XCDYouTubeVideo.html#/c:objc(cs)XCDYouTubeVideo(py)title":{"name":"title","abstract":"<p>The title of the video.</p>","parent_name":"XCDYouTubeVideo"},"Classes/XCDYouTubeVideo.html#/c:objc(cs)XCDYouTubeVideo(py)author":{"name":"author","abstract":"<p>The name of author that uploaded this video.</p>","parent_name":"XCDYouTubeVideo"},"Classes/XCDYouTubeVideo.html#/c:objc(cs)XCDYouTubeVideo(py)channelIdentifier":{"name":"channelIdentifier","abstract":"<p>The channel identifier of YouTube channel that this video belongs to.</p>","parent_name":"XCDYouTubeVideo"},"Classes/XCDYouTubeVideo.html#/c:objc(cs)XCDYouTubeVideo(py)videoDescription":{"name":"videoDescription","abstract":"<p>The description of the video.</p>","parent_name":"XCDYouTubeVideo"},"Classes/XCDYouTubeVideo.html#/c:objc(cs)XCDYouTubeVideo(py)duration":{"name":"duration","abstract":"<p>The duration of the video in seconds.</p>","parent_name":"XCDYouTubeVideo"},"Classes/XCDYouTubeVideo.html#/c:objc(cs)XCDYouTubeVideo(py)viewCount":{"name":"viewCount","abstract":"<p>The views count of the video.</p>","parent_name":"XCDYouTubeVideo"},"Classes/XCDYouTubeVideo.html#/c:objc(cs)XCDYouTubeVideo(py)thumbnailURLs":{"name":"thumbnailURLs","abstract":"<p>An array of thumbnail URLs for an images of different sizes. Ordered from smaller to bigger.</p>","parent_name":"XCDYouTubeVideo"},"Classes/XCDYouTubeVideo.html#/c:objc(cs)XCDYouTubeVideo(py)thumbnailURL":{"name":"thumbnailURL","abstract":"<p>A thumbnail URL for an image of small size, i.e. 120Ã—90. May be nil.</p>","parent_name":"XCDYouTubeVideo"},"Classes/XCDYouTubeVideo.html#/c:objc(cs)XCDYouTubeVideo(py)smallThumbnailURL":{"name":"smallThumbnailURL","abstract":"<p>A thumbnail URL for an image of small size, i.e. 120Ã—90. May be nil.</p>","parent_name":"XCDYouTubeVideo"},"Classes/XCDYouTubeVideo.html#/c:objc(cs)XCDYouTubeVideo(py)mediumThumbnailURL":{"name":"mediumThumbnailURL","abstract":"<p>A thumbnail URL for an image of medium size, i.e. 320Ã—180, 480Ã—360 or 640Ã—480. May be nil.</p>","parent_name":"XCDYouTubeVideo"},"Classes/XCDYouTubeVideo.html#/c:objc(cs)XCDYouTubeVideo(py)largeThumbnailURL":{"name":"largeThumbnailURL","abstract":"<p>A thumbnail URL for an image of large size, i.e. 1&#39;280Ã—720 or 1&#39;980Ã—1&#39;080. May be nil.</p>","parent_name":"XCDYouTubeVideo"},"Classes/XCDYouTubeVideo.html#/c:objc(cs)XCDYouTubeVideo(py)streamURLs":{"name":"streamURLs","abstract":"<p>Undocumented</p>","parent_name":"XCDYouTubeVideo"},"Classes/XCDYouTubeVideo.html#/c:objc(cs)XCDYouTubeVideo(py)streamURL":{"name":"streamURL","abstract":"<p>A streamURL that is compatible on Apple devices (can be <code>nil</code>)","parent_name":"XCDYouTubeVideo"},"Classes/XCDYouTubeVideo.html#/c:objc(cs)XCDYouTubeVideo(py)captionURLs":{"name":"captionURLs","abstract":"<p>Undocumented</p>","parent_name":"XCDYouTubeVideo"},"Classes/XCDYouTubeVideo.html#/c:objc(cs)XCDYouTubeVideo(py)autoGeneratedCaptionURLs":{"name":"autoGeneratedCaptionURLs","abstract":"<p>Undocumented</p>","parent_name":"XCDYouTubeVideo"},"Classes/XCDYouTubeVideo.html#/c:objc(cs)XCDYouTubeVideo(py)videoIdentifiers":{"name":"videoIdentifiers","abstract":"<p>Undocumented</p>","parent_name":"XCDYouTubeVideo"},"Classes/XCDYouTubeVideo.html#/c:objc(cs)XCDYouTubeVideo(py)expirationDate":{"name":"expirationDate","abstract":"<p>The expiration date of the video.</p>","parent_name":"XCDYouTubeVideo"},"Classes/XCDYouTubeLogger.html#/c:objc(cs)XCDYouTubeLogger(cm)setLogHandler:":{"name":"+setLogHandler:","abstract":"<p>If you prefer not to use CocoaLumberjack and want something more advanced than the default <code>NSLog</code> implementation, you can use this method to write your own logger.</p>","parent_name":"XCDYouTubeLogger"},"Classes/XCDYouTubeClient.html#/c:objc(cs)XCDYouTubeClient(cm)defaultClient":{"name":"+defaultClient","abstract":"<p>Returns the shared client with the default language, i.e. the preferred language of the main bundle.</p>","parent_name":"XCDYouTubeClient"},"Classes/XCDYouTubeClient.html#/c:objc(cs)XCDYouTubeClient(im)initWithLanguageIdentifier:":{"name":"-initWithLanguageIdentifier:","abstract":"<p>Initializes a client with the specified language identifier.</p>","parent_name":"XCDYouTubeClient"},"Classes/XCDYouTubeClient.html#/c:objc(cs)XCDYouTubeClient(py)languageIdentifier":{"name":"languageIdentifier","abstract":"<p>The language identifier of the client, used for error localization.</p>","parent_name":"XCDYouTubeClient"},"Classes/XCDYouTubeClient.html#/c:objc(cs)XCDYouTubeClient(im)getVideoWithIdentifier:completionHandler:":{"name":"-getVideoWithIdentifier:completionHandler:","abstract":"<p>Starts an asynchronous operation for the specified video identifier, and calls a handler upon completion.</p>","parent_name":"XCDYouTubeClient"},"Classes/XCDYouTubeClient.html#/c:objc(cs)XCDYouTubeClient(im)getVideoWithIdentifier:cookies:completionHandler:":{"name":"-getVideoWithIdentifier:cookies:completionHandler:","abstract":"<p>Starts an asynchronous operation for the specified video identifier, and calls a handler upon completion.</p>","parent_name":"XCDYouTubeClient"},"Classes/XCDYouTubeClient.html#/c:objc(cs)XCDYouTubeClient(im)getVideoWithIdentifier:cookies:customPatterns:completionHandler:":{"name":"-getVideoWithIdentifier:cookies:customPatterns:completionHandler:","abstract":"<p>Starts an asynchronous operation for the specified video identifier, and calls a handler upon completion.</p>","parent_name":"XCDYouTubeClient"},"Classes/XCDYouTubeClient.html#/c:objc(cs)XCDYouTubeClient(im)queryVideo:cookies:completionHandler:":{"name":"-queryVideo:cookies:completionHandler:","abstract":"<p>Starts an asynchronous operation for the specified <code>XCDYouTubeVide</code> object`, and calls a handler upon completion.</p>","parent_name":"XCDYouTubeClient"},"Classes/XCDYouTubeClient.html#/c:objc(cs)XCDYouTubeClient(im)queryVideo:streamURLsToQuery:options:cookies:completionHandler:":{"name":"-queryVideo:streamURLsToQuery:options:cookies:completionHandler:","abstract":"<p>Starts an asynchronous operation for the specified <code>XCDYouTubeVide</code> object`,  stream URLs to query and cookies, then calls a handler upon completion.</p>","parent_name":"XCDYouTubeClient"},"Classes/XCDYouTubeClient.html":{"name":"XCDYouTubeClient","abstract":"<p>The <code>XCDYouTubeClient</code> class is responsible for interacting with the YouTube API. Given a YouTube video identifier, you will get video information with the <code>&lt;-getVideoWithIdentifier:completionHandler:&gt;</code> method.</p>"},"Classes/XCDYouTubeLogger.html":{"name":"XCDYouTubeLogger","abstract":"<p>You can use the <code>XCDYouTubeLogger</code> class to configure how the XCDYouTubeKit framework emits logs.</p>"},"Classes/XCDYouTubeVideo.html":{"name":"XCDYouTubeVideo","abstract":"<p>Represents a YouTube video. Use the <code>&lt;-[XCDYouTubeClient getVideoWithIdentifier:completionHandler:]&gt;</code> method to obtain a <code>XCDYouTubeVideo</code> object.</p>"},"Classes/XCDYouTubeVideoOperation.html":{"name":"XCDYouTubeVideoOperation","abstract":"<p>XCDYouTubeVideoOperation is a subclass of <code>NSOperation</code> that connects to the YouTube API and parse the response.</p>"},"Classes/XCDYouTubeVideoPlayerViewController.html":{"name":"XCDYouTubeVideoPlayerViewController","abstract":"<p>Undocumented</p>"},"Classes/XCDYouTubeVideoQueryOperation.html":{"name":"XCDYouTubeVideoQueryOperation","abstract":"<p>XCDYouTubeVideoQueryOperation is a subclass of <code>NSOperation</code> that  check to see if the <code>streamURLs</code> in a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/XCDYouTubeVideo.html\">XCDYouTubeVideo</a></code> object  is reachable (i.e. does not contain any HTTP errors). This operation will only run on a background queue, starting this operation on the main thread will raise an assertion."},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Constants.html":{"name":"Constants","abstract":"<p>The following constants are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}